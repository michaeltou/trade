<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
-->

<mapper namespace="com.trade.infrastructure.address.AddressOperation">
<!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
     使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
     resultType="com.trade.conn.Dept"就表示将查询结果封装成一个Dept类的对象返回
     User类就是users表所对应的实体类
     
      <typeAliases> 
    <typeAlias alias="User" type="com.trade.user.User" /> 
 </typeAliases>
-->

    
    <sql id="fullComlumns"> user_addr_id,user_id,detail_addr,province,city,name,phone,cell_phone,type </sql> 
    
    
     <!-- 
         根据id查询得到一个user对象
     -->
     <select id="getDefaultAddressByUserAndType" parameterType="com.trade.infrastructure.address.AddressDO" resultType="com.trade.infrastructure.address.AddressDO">
         select <include refid="fullComlumns"/> 
          from
          user_address
           where user_id=#{user_id}
           and type=#{type}
     </select>
     
    <select id="selectUserAddressByUserAndType" parameterType="com.trade.infrastructure.address.AddressDO" resultType="com.trade.infrastructure.address.AddressDO">
         select <include refid="fullComlumns"/> 
          from
          user_address
           where user_id=#{user_id}
           and type=#{type}
     </select>
     
     
     <insert id="addAddress" parameterType="com.trade.infrastructure.address.AddressDO" useGeneratedKeys="true" keyProperty="user_addr_id" >
        insert into user_address(user_id,detail_addr,province,city,name,phone,cell_phone,type)  values
        (#{user_id},#{detail_addr},#{province},#{city},#{name},#{phone},#{cell_phone},#{type}) 
    </insert>
    
    
     
 </mapper>