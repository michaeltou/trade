<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
-->
<mapper namespace="com.trade.liveroom.ILiveRoomOperation">
     <!-- 
         根据room_id查询得到一个LiveRoom对象
     -->
     <select id="getLiveRoomByRoomID" parameterType="int" resultType="com.trade.liveroom.LiveRoom">
         select * from liveroom where room_id=#{room_id}
     </select>
     <!-- 
         根据onLineUsersCount模糊查询得到LiveRoom对象
     -->
     <select id="getLiveRoomByOnLineUsersCount" parameterType="string" resultType="com.trade.liveroom.LiveRoom">
         select * from liveroom where flow_status = 0  order by on_line_users_count limit #{on_line_users_count}
     </select>
     <!-- 
         新增一个LiveRoom对象
     -->
     <insert id="addLiveRoom" parameterType="com.trade.liveroom.LiveRoom" useGeneratedKeys="true" keyProperty="id">
         insert into liveroom(room_id,user_id,city,name,portrait,online_users_count,
         	url,title,cover,gmt_create)
         values(#{room_id},#{user_id},#{city_id},#{name},#{portrait},#{online_users_count},
         	#{url},#{title},#{cover},#{gmt_create})
     </insert>
     <!-- 
         delete一个trade order对象
     -->
     <update id="deleteLiveRoom" parameterType="com.trade.liveroom.LiveRoom">
         update liveroom set flow_status=0 where room_id=#{room_id}
     </update>
 </mapper>